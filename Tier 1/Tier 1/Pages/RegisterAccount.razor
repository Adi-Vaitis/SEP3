@page "/RegisterAccount"
@using Tier_1.Models.Client
@inject IClientService clientService
@inject NavigationManager NavigationManager
<style>
.sidebar
{
display: none !important;
}
</style>

<div class="loginForm">
    <h3>Create account ...</h3>
    <input type="text" placeholder="Name" @bind-value="_name">
    <br>
    <input type="text" placeholder="Username" @bind-value="_username">
    <br>
    <input type="password" placeholder="Password" @bind-value="_password">
    <br>
    <div style="color:red">@_errorMessage</div>
    <br>
    <button type="button" @onclick="CreateAccount" class="loginButtons">Create</button>
    <br>
    <a href="" @onclick="GoToLogIn">Having an account already? Come here!
    </a>

</div>

@code {
    private string _username;
    private string _name;
    private string _password;
    private string _errorMessage;

    private async Task CreateAccount()
    {
        _errorMessage = "";
        try
        {
            if (!_name.Any() || !_username.Any() || !_password.Any())
            {
                return;
            }
            Client newClient = new Client(_username, _name, _password);
            String result = await ClientService.CreateClientAccount(newClient);
            if (result.Equals("\"Account already exists\""))
            {
                _errorMessage = result;
                _username = "";
                _name = "";
                _password = "";
                return;
            }
            _username = "";
            _name = "";
            _password = "";
            NavigationManager.NavigateTo("/Login");
        }
        catch (Exception e)
        {
            _errorMessage = "All fields are required.";
        }
    }

    private void GoToLogIn()
    {
        NavigationManager.NavigateTo("/Login");
    }
}